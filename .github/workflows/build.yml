name: Build GCC

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache source
        uses: actions/cache@v2
        with:
          path: cache
          key: ${{ runner.os }}-gcc-${{ hashFiles('**/list.txt') }}
          restore-keys: |
            ${{ runner.os }}-gcc-
      - name: Install aria2
        run: |
          sudo apt-get update
          sudo apt-get install aria2 --no-install-recommends
      - name: Download source
        run: |
          aria2c -x16 -s16 -i list.txt -c
          mkdir output

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}/base
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: images/base.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: true
          build-args: |
            --progress=plain
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export output
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: output
